/*
ðŸ‘‹ Hi! This file was autogenerated by tslint-to-eslint-config.
https://github.com/typescript-eslint/tslint-to-eslint-config

It represents the closest reasonable ESLint configuration to this
project's original TSLint configuration.

We recommend eventually switching this configuration to extend from
the recommended rulesets in typescript-eslint. 
https://github.com/typescript-eslint/tslint-to-eslint-config/blob/master/docs/FAQs.md

Happy linting! ðŸ’–
*/
module.exports = {
    env: {
        browser: true,
        es6: true,
        node: true,
    },
    parser: '@typescript-eslint/parser',
    parserOptions: {
        project: 'tsconfig.json',
        sourceType: 'module',
    },
    plugins: ['@typescript-eslint', '@typescript-eslint/tslint'],
    rules: {
        '@angular-eslint/component-class-suffix': 'error',
        '@angular-eslint/component-selector': [
            'error',
            {
                type: 'element',
                prefix: 'app',
                style: 'kebab-case',
            },
        ],
        '@angular-eslint/directive-class-suffix': 'error',
        '@angular-eslint/directive-selector': [
            'error',
            {
                type: 'attribute',
                prefix: 'app',
                style: 'camelCase',
            },
        ],
        '@angular-eslint/no-conflicting-lifecycle': 'error',
        '@angular-eslint/no-host-metadata-property': 'error',
        '@angular-eslint/no-input-rename': 'error',
        '@angular-eslint/no-inputs-metadata-property': 'error',
        '@angular-eslint/no-output-native': 'error',
        '@angular-eslint/no-output-on-prefix': 'error',
        '@angular-eslint/no-output-rename': 'error',
        '@angular-eslint/no-outputs-metadata-property': 'error',
        '@angular-eslint/prefer-on-push-component-change-detection': 'error',
        '@angular-eslint/prefer-output-readonly': 'error',
        '@angular-eslint/template/banana-in-box': 'error',
        '@angular-eslint/template/no-negated-async': 'error',
        '@angular-eslint/use-lifecycle-interface': 'error',
        '@angular-eslint/use-pipe-transform-interface': 'error',
        '@typescript-eslint/array-type': [
            'error',
            {
                default: 'array',
            },
        ],
        '@typescript-eslint/consistent-type-definitions': 'error',
        '@typescript-eslint/dot-notation': 'off',
        '@typescript-eslint/explicit-member-accessibility': [
            'error',
            {
                accessibility: 'explicit',
            },
        ],
        '@typescript-eslint/indent': 'error',
        '@typescript-eslint/member-delimiter-style': [
            'error',
            {
                multiline: {
                    delimiter: 'semi',
                    requireLast: true,
                },
                singleline: {
                    delimiter: 'semi',
                    requireLast: false,
                },
            },
        ],
        '@typescript-eslint/member-ordering': 'error',
        '@typescript-eslint/naming-convention': 'error',
        '@typescript-eslint/no-empty-function': 'error',
        '@typescript-eslint/no-empty-interface': 'error',
        '@typescript-eslint/no-inferrable-types': [
            'off',
            {
                ignoreParameters: true,
            },
        ],
        '@typescript-eslint/no-misused-new': 'error',
        '@typescript-eslint/no-misused-new': 'error',
        '@typescript-eslint/no-non-null-assertion': 'error',
        '@typescript-eslint/no-unused-expressions': 'error',
        '@typescript-eslint/prefer-function-type': 'error',
        '@typescript-eslint/quotes': ['error', 'single'],
        '@typescript-eslint/semi': ['error', 'always'],
        '@typescript-eslint/type-annotation-spacing': 'error',
        '@typescript-eslint/unified-signatures': 'error',
        'arrow-body-style': 'error',
        'arrow-parens': ['off', 'always'],
        'brace-style': ['error', '1tbs'],
        'comma-dangle': 'off',
        'constructor-super': 'error',
        curly: 'error',
        'eol-last': 'error',
        eqeqeq: ['error', 'smart'],
        'guard-for-in': 'error',
        'id-blacklist': 'off',
        'id-match': 'off',
        'import/no-deprecated': 'warn',
        'jsdoc/no-types': 'error',
        'linebreak-style': 'off',
        'max-len': [
            'error',
            {
                code: 200,
            },
        ],
        'no-unused-vars': ['error', { vars: 'all', args: 'after-used', ignoreRestSiblings: false }],

        'new-parens': 'off',
        'newline-per-chained-call': 'off',
        'no-bitwise': 'error',
        'no-caller': 'error',
        'no-console': [
            'error',
            {
                allow: [
                    'log',
                    'warn',
                    'dir',
                    'timeLog',
                    'assert',
                    'clear',
                    'count',
                    'countReset',
                    'group',
                    'groupEnd',
                    'table',
                    'dirxml',
                    'error',
                    'groupCollapsed',
                    'Console',
                    'profile',
                    'profileEnd',
                    'timeStamp',
                    'context',
                ],
            },
        ],
        'no-debugger': 'error',
        'no-empty': 'error',
        'no-eval': 'error',
        'no-extra-semi': 'off',
        'no-fallthrough': 'error',
        'no-irregular-whitespace': 'off',
        'no-multiple-empty-lines': 'off',
        'no-new-wrappers': 'error',
        'no-restricted-imports': [
            'error',
            {
                paths: ['rxjs/Rx', 'lodash-es'],
                patterns: [
                    '.*\\loader-module$',
                    '.*\\module-loader$',
                    '.*\\module-loader.module$',
                    '.*\\module.loader$',
                ],
            },
        ],
        'no-shadow': [
            'error',
            {
                hoist: 'all',
            },
        ],
        'no-throw-literal': 'error',
        'no-trailing-spaces': 'error',
        'no-undef-init': 'error',
        'no-underscore-dangle': 'off',
        'no-unused-labels': 'error',
        'no-var': 'error',
        'prefer-const': 'error',
        'quote-props': 'off',
        radix: 'error',
        'react/jsx-curly-spacing': 'off',
        'react/jsx-equals-spacing': 'off',
        'react/jsx-wrap-multilines': 'off',
        'space-before-function-paren': 'off',
        'space-in-parens': ['off', 'never'],
        'spaced-comment': [
            'error',
            'always',
            {
                markers: ['/'],
            },
        ],
        '@typescript-eslint/tslint/config': [
            'error',
            {
                rules: {
                    'arguments-order': true,
                    'bool-param-default': true,
                    'cognitive-complexity': true,
                    'consecutive-overloads': true,
                    'early-exit': true,
                    'import-spacing': true,
                    'max-func-args': true,
                    'max-switch-cases': true,
                    'max-union-size': true,
                    'no-unused-vars': ['error', { vars: 'all', args: 'after-used', ignoreRestSiblings: false }],

                    'naming-convention': [
                        true,
                        {
                            type: 'default',
                            format: ['camelCase', 'UPPER_CASE'],
                            leadingUnderscore: 'forbid',
                            trailingUnderscore: 'forbid',
                        },
                        {
                            type: 'variable',
                            modifiers: ['global', 'const'],
                            format: ['camelCase', 'UPPER_CASE'],
                        },
                        {
                            type: 'functionVariable',
                            modifiers: ['export', 'const'],
                            format: 'camelCase',
                        },
                        {
                            type: 'parameter',
                            modifiers: 'unused',
                            leadingUnderscore: 'allow',
                        },
                        {
                            type: 'method',
                            filter: '^toJSON$',
                            format: null,
                        },
                        {
                            type: 'property',
                            modifiers: ['public', 'static', 'const'],
                            format: 'UPPER_CASE',
                        },
                        {
                            type: 'type',
                            format: 'PascalCase',
                        },
                        {
                            type: 'class',
                            modifiers: 'abstract',
                            prefix: 'Abstract',
                        },
                    ],
                    'ngrx-action-hygiene': true,
                    'ngrx-avoid-dispatching-multiple-actions-sequentially': true,
                    'ngrx-effect-creator-and-decorator': true,
                    'ngrx-no-dispatch-in-effects': true,
                    'ngrx-no-duplicate-action-types': true,
                    'ngrx-no-effect-decorator': true,
                    'ngrx-no-effects-in-providers': true,
                    'ngrx-no-multiple-actions-in-effects': true,
                    'ngrx-no-multiple-stores': true,
                    'ngrx-no-reducer-in-key-names': true,
                    'ngrx-selector-for-select': true,
                    'no-accessor-field-mismatch': true,
                    'no-accessor-recursion': true,
                    'no-all-duplicated-branches': true,
                    'no-alphabetical-sort': true,
                    'no-array-delete': true,
                    'no-big-function': true,
                    'no-case-with-or': true,
                    'no-collapsible-if': true,
                    'no-collection-size-mischeck': true,
                    'no-commented-code': true,
                    'no-complex-conditionals': true,
                    'no-dead-store': true,
                    'no-duplicate-in-composite': true,
                    'no-duplicate-string': true,
                    'no-duplicated-branches': true,
                    'no-element-overwrite': true,
                    'no-else-after-return': true,
                    'no-empty-array': true,
                    'no-empty-destructuring': true,
                    'no-extra-semicolon': true,
                    'no-for-each-push': true,
                    'no-gratuitous-expressions': true,
                    'no-identical-conditions': true,
                    'no-identical-expressions': true,
                    'no-identical-functions': true,
                    'no-ignored-initial-value': true,
                    'no-ignored-return': true,
                    'no-in-misuse': true,
                    'no-invalid-await': true,
                    'no-invariant-return': true,
                    'no-inverted-boolean-check': true,
                    'no-map-without-usage': true,
                    'no-misleading-array-reverse': true,
                    'no-misspelled-operator': true,
                    'no-multiline-string-literals': true,
                    'no-nested-switch': true,
                    'no-nested-template-literals': true,
                    'no-redundant-boolean': true,
                    'no-redundant-jump': true,
                    'no-redundant-parentheses': true,
                    'no-return-type-any': false,
                    'no-return-undefined': true,
                    'no-same-line-conditional': true,
                    'no-self-assignment': true,
                    'no-small-switch': true,
                    'no-statements-same-line': true,
                    'no-static-this': true,
                    'no-try-promise': true,
                    'no-unconditional-jump': true,
                    'no-undefined-argument': true,
                    'no-unenclosed-multiline-block': true,
                    'no-unnecessary-else': true,
                    'no-unthrown-error': true,
                    'no-unused': true,
                    'no-unused-array': true,
                    'no-unused-css': true,
                    'no-unused-declaration': true,
                    'no-use-of-empty-return-value': true,
                    'no-useless-cast': true,
                    'no-useless-catch': true,
                    'no-useless-increment': true,
                    'no-useless-intersection': true,
                    'no-variable-usage-before-declaration': true,
                    'nx-enforce-module-boundaries': [
                        true,
                        {
                            allow: [],
                            depConstraints: [
                                {
                                    sourceTag: 'scope:api',
                                    onlyDependOnLibsWithTags: ['scope:api', 'scope:common'],
                                },
                                {
                                    sourceTag: 'scope:frontend',
                                    onlyDependOnLibsWithTags: ['scope:frontend', 'scope:common'],
                                },
                                {
                                    sourceTag: 'scope:common',
                                    onlyDependOnLibsWithTags: ['scope:common'],
                                },
                                {
                                    sourceTag: 'type:app',
                                    onlyDependOnLibsWithTags: [
                                        'type:feature',
                                        'type:root-state',
                                        'type:ui',
                                        'type:common',
                                        'type:shared',
                                    ],
                                },
                                {
                                    sourceTag: 'type:feature',
                                    onlyDependOnLibsWithTags: ['type:shared', 'type:root-state', 'type:common'],
                                },
                                {
                                    sourceTag: 'type:common',
                                    onlyDependOnLibsWithTags: ['type:common'],
                                },
                                {
                                    sourceTag: 'type:root-state',
                                    onlyDependOnLibsWithTags: ['type:shared'],
                                },
                                {
                                    sourceTag: 'type:shared',
                                    onlyDependOnLibsWithTags: ['type:shared', 'type:common'],
                                },
                                {
                                    onlyDependOnLibsWithTags: ['*'],
                                    sourceTag: '*',
                                },
                            ],
                            enforceBuildableLibDependency: true,
                        },
                    ],
                    'object-shorthand-properties-first': true,
                    'parameters-max-number': true,
                    'prefer-const-enum': true,
                    'prefer-default-last': true,
                    'prefer-dry-conditionals': true,
                    'prefer-immediate-return': true,
                    'prefer-optional': true,
                    'prefer-promise-shorthand': true,
                    'prefer-type-guard': true,
                    'prefer-while': true,
                    prettier: true,
                    'rxjs-no-exposed-subjects': true,
                    'rxjs-no-internal': true,
                    'rxjs-no-subject-unsubscribe': true,
                    'rxjs-no-unsafe-catch': true,
                    'rxjs-no-unsafe-first': true,
                    'rxjs-no-unsafe-switchmap': true,
                    'rxjs-no-unsafe-takeuntil': true,
                    'template-use-track-by-function': true,
                    'try-catch-first': true,
                    typedef: [
                        true,
                        'call-signature',
                        'parameter',
                        'member-variable-declaration',
                        'arrow-parameter',
                        'property-declaration',
                    ],
                    'use-primitive-type': true,
                    'use-type-alias': true,
                    whitespace: [true, 'check-branch', 'check-decl', 'check-operator', 'check-separator', 'check-type'],
                    'no-unused-vars': ['error', { vars: 'all', args: 'after-used', ignoreRestSiblings: false }],
                },
            },
        ],
    },
};
